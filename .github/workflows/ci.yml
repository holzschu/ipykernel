name: ipykernel tests

on:
  push:
    branches: ["main"]
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        python-version: [ '3.7', '3.8', '3.9', '3.10',  'pypy-3.7' ]
        exclude:
        - os: windows
          python-version: pypy-3.7
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Base Setup
      uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

    - name: Install the Python dependencies
      run: |
        pip install --pre --upgrade --upgrade-strategy=eager .[test] codecov

    - name: Install matplotlib
      if: ${{ matrix.os != 'macos' && matrix.python-version != 'pypy3' }}
      run: |
        pip install matplotlib || echo 'failed to install matplotlib'

    - name: Install alternate event loops
      if: ${{ matrix.os != 'windows' }}
      run: |
        pip install curio || echo 'ignoring curio install failure'
        pip install trio || echo 'ignoring trio install failure'

    - name: List installed packages
      run: |
        pip uninstall pipx -y
        pip install pipdeptree
        pipdeptree 
        pipdeptree --reverse 
        pip freeze
        pip check

    - name: Run the tests
      timeout-minutes: 10
      if: ${{ !startsWith( matrix.python-version, 'pypy' ) }}
      run: |
        pytest ipykernel -vv -s --cov ipykernel --cov-branch --cov-report term-missing:skip-covered --durations 10

    - name: Run the tests on pypy
      timeout-minutes: 15
      if: ${{ startsWith( matrix.python-version, 'pypy' ) }}
      run: |
        pytest -vv ipykernel

    - name: Build the docs
      if: ${{ matrix.os == 'ubuntu' &&  matrix.python-version == '3.9'}}
      run: |
        cd docs
        pip install -r requirements.txt
        make html

    - name: Coverage
      run: |
        codecov

  check_docstrings:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
        python-version: [ '3.9' ]
        exclude:
        - os: windows
          python-version: pypy3
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Base Setup
      uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

    - name: Install the Python dependencies
      run: |
        pip install --pre --upgrade --upgrade-strategy=eager .
        pip install velin

    - name: Check Docstrings
      run: |
        velin . --check --compact

  test_without_debugpy:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
        python-version: [ '3.9' ]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Base Setup
      uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

    - name: Install the Python dependencies without debugpy
      run: |
        pip install --pre --upgrade --upgrade-strategy=eager .[test]
        pip uninstall --yes debugpy

    - name: List installed packages
      run: |
        pip freeze

    - name: Run the tests
      timeout-minutes: 10
      run: |
        pytest ipykernel -vv -s --durations 10
